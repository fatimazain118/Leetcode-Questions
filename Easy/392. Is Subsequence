bool isSub(string s, string t){
    if(s.size() > t.size()){
        return false;
    }
    
    int i = 0;
    int j = 0;
    
    while(i<s.size() && j<t.size()){
        if(s[i] == t[j]){
            i++;
            j++;
        }
        else{
            j++;
        }
    }
    if(s.size() == i){
        return true;
    }
    return false;
}

class Solution {
public:
    bool isSubsequence(string s, string t) {
        if(isSub(s,t)){
            return true;
        }
        return false;
    }
};
________________________________________________________________
class Solution {
public:
    bool isSubsequence(string s, string t) {
        int j=0;
        
        if(s=="")  return true;
        for(int i=0; i<t.size(); i++){
            if(t[i] == s[j]){
                j++;
            }
            if(j == s.size())  return true;
        }
        return false;
    }
};

O(len(s) + O(len(t))
_______________________________________________________________
