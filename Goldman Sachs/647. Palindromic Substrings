// Brute Force find all the substring of the string then check wheather they are palindrome or not O(N^2) for finding substrings and O(N) for finding palindrome --> O(N^3)

class Solution {
public:
    int countSubstrings(string s) {
        vector<vector<bool>> dp(s.size(), vector<bool>(s.size(),false));
        
        int count = 0;
        
        for(int diff=0; diff<s.size(); diff++){    // for first row
            for(int i=0, j=diff; j<s.size(); i++, j++){
                
                if(diff==0)  dp[i][j] = true;         //for string of length =1
                
                else if(diff==1){
                    if(s[i]==s[j])         //check the last characters
                        dp[i][j]=true;
                        else dp[i][j] = false;  
                }
                
                else{
                    if(s[i]==s[j]){      //check last characters
                        dp[i][j] = dp[i+1][j-1];    //then check inner string
                    }
                    else dp[i][j]=false;
                }
                if(dp[i][j]) count++;
            }
            
        }
        return count;
    }
};
