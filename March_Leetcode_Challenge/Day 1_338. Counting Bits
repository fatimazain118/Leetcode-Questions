// int countSetBit(int n){
//     int count = 0;
//     while(n){
//         int rsb = n & -n; //by kernighan's algo
//         n -= rsb;
//         count++;
//     }
//     return count;
// }

// class Solution {
// public:
//     vector<int> countBits(int n) {
//      vector<int> ans;
        
//         for(int i=0; i<=n; i++){
//             ans.push_back(countSetBit(i));
//         }
//         return ans;
//     }
// };

class Solution {
public:
    vector<int> countBits(int n) {
        vector<int> ans(n+1,0);
    
    for(int i=0; i<=n; i++){
        int num = i;
         int count = 0;
        
        while(num){
            count += num%2;
            num /= 2;
        }
        ans[i] = count;
    }
    return ans;
 }
};
