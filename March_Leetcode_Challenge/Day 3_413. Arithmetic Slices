class Solution {
public:
    int numberOfArithmeticSlices(vector<int>& nums) {
//         if(nums.size() < 3)  return 0;
        
//         int start = 0, end = 1, diff,n, sum = 0;
        
//         for(int i=1; i<nums.size(); i++){
//             diff = nums[end] - nums[start];
//             while(i+1<nums.size() && nums[i+1]-nums[i] == diff){
//                 end++;
//                 i++;
//             }
//             n = (end-start)+1;
//             if(n>=3)
//                 sum += (n-2)*(n+1-2)/2;
//             start = end;
//             end++;
//         }
//         return sum;
//     }
// };

    int ans=0;
    int cnt=0;
    for(int i=1;i<nums.size()-1;i++)
    {
        if(nums[i-1]-nums[i]==nums[i]-nums[i+1])
            ans++;
        else
            ans=0;
        cnt+=ans;
    }
   return cnt;
}
};

_____________________________________________________________________________________________________
//O(N^2)
   int numberOfArithmeticSlices(vector<int>& nums) {
		// if nums size is less than 3 return false
        if(nums.size() < 3)
            return 0;
        
        int cnt = 0, diff;
        
        for(int i = 0; i<nums.size()-2; ++i)
        {
			// storing diff of first 2 elements
            diff = nums[i+1] - nums[i];
			
			// checking for consecutive elements with same difference.
            for(int j = i+2; j<nums.size(); ++j)
            {
				// if we find the same diff of next 2 elements
				// this means we  find consecutive elements
				// increase the Count
                if(nums[j] - nums[j-1] == diff)
                    ++cnt;
                else
				// break as we need to cnt for consecutive diff elements
                    break;
            }
        }
		// return cnt
        return cnt;
    }
};
