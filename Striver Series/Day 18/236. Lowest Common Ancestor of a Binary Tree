class Solution {
public:
    TreeNode* lowestCommonAncestor(TreeNode* root, TreeNode* p, TreeNode* q) {
        //base case
        
        if(root == NULL || root == p || root == q){
            return root;
        }
        
        TreeNode* left = lowestCommonAncestor(root->left, p, q);
        TreeNode* right = lowestCommonAncestor(root->right, p, q);
        
        //result
        if(left == NULL){
            return right;
        }
        else if(right == NULL){
            return left;
        }
        else{              //it comes when both our left and right are not null means we found our ans
            return root;
        }
    }
};

Time complexity: O(N) where n is the number of nodes.

Space complexity: O(N), auxiliary space.
