//Using BFS --> kahn's Algo (Incoming edge is zero)
//Such linear ordering of vertices u->v that u should appear before v

vector<int> topoSort(int V, vector<int> adj[]){
    queue<int> q;
    vector<int> indegree(V,0);
    
    for(int i=0; i<V; i++){
        for(auto it : adj[i]){       //for every adjacent node
            indegree[it]++;
        }
    }
    
    for(int i=0; i<V; i++){
        if(indegree[i] == 0){
            q.push(i);
        }
    }
    
    vector<int> topo;
    while(!q.empty()){
        int node = q.front();
        q.pop();
        
        topo.push_back(node);
        for(auto it : adj[node]){
            indegree[it]--;
            if(indegree[it] == 0){
                q.push(it);
            }
        }
    }
    return topo;
   }
   
Time Complexity: O(N+E)

Space complexity: O(N)+O(N)
