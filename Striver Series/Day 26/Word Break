unordered_map<string,int> dp;

int solve(string a, vector<string> &b){
    int asize = a.length();
    if(asize==0)  return 1;
    if(dp[a] != 0)  return dp[a];
    
    for(int i=1; i<=asize; i++){
        int f=0;
        string ss = a.substr(0,i);
        for(int j=0; j<b.size(); j++){
            if(ss.compare(b[j])==0){
                f=1;
                break;
            }
        }
        if(f==1 and solve(a.substr(i, asize-i),b) == 1)   return dp[a] = 1;
    }
    return dp[a] = -1;
}
class Solution
{
public:
    int wordBreak(string A, vector<string> &B) {
        int x = solve(A,B);
        if(x==1)  return 1;
        else  return 0;
    }
